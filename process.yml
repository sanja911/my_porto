# Orb 'circleci/node@4.1' resolved to 'circleci/node@4.1.1'
version: 2
jobs:
  build-and-test:
    docker:
    - image: circleci/node:10
    steps:
    - checkout
    - restore_cache:
        key: dependency-cache-{{ checksum "package-lock.json" }}
    - run:
        name: install-dependancies
        command: npm ci
    - save_cache:
        key: dependency-cache-{{ checksum "package-lock.json" }}
        paths:
        - $HOME/.npm
    - run:
        name: unit test
        command: |
          npm run ci:test
workflows:
  sample:
    jobs:
    - build-and-test
  version: 2

# Original config.yml file:
# # Use the latest 2.1 version of CircleCI pipeline process engine.
# # See: https://circleci.com/docs/2.0/configuration-reference
# version: 2.1
# 
# orbs:
#   # The Node.js orb contains a set of prepackaged CircleCI configuration you can utilize
#   # Orbs reduce the amount of configuration required for common tasks.
#   # See the orb documentation here: https://circleci.com/developer/orbs/orb/circleci/node
#   node: circleci/node@4.1
# 
# jobs:
#   build-and-test:
#     docker:
#       - image: circleci/node:10
#     steps:
#       - test
# 
# commands:
#   test:
#     steps:
#       - checkout
#       - restore_cache:
#           key: dependency-cache-{{ checksum \"package-lock.json\" }}
#       - run:
#           name: install-dependancies
#           command: npm ci
#       - save_cache:
#           key: dependency-cache-{{ checksum \"package-lock.json\" }}
#           paths:
#             - $HOME/.npm
#       - run:
#           name: unit test
#           command: |
#             npm run ci:test
# workflows:
#   # Below is the definition of your workflow.
#   # Inside the workflow, you provide the jobs you want to run, e.g this workflow runs the build-and-test job above.
#   # CircleCI will run this workflow on every commit.
#   # For more details on extending your workflow, see the configuration docs: https://circleci.com/docs/2.0/configuration-reference/#workflows
#   sample:
#     jobs:
#       - build-and-test
#       # For running simple node tests, you could optionally use the node/test job from the orb to replicate and replace the job above in fewer lines.
#       # - node/test